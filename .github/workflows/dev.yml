# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: ["dev"]
jobs:
  build-run-tests:
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    env:
      NODE_ENV: test
      username: ${{ secrets.db_username }}
      password: ${{ secrets.db_password }}
      database: nftng_test
      host: ${{ secrets.db_host_test }}
      dialect: mysql
      port: ${{ secrets.db_port_test }}
      accessKey: ${{ secrets.spaces_access_key_test }}
      secretKey: ${{ secrets.spaces_secret_key_test }}
      endPoint: ${{ secrets.spaces_end_point_test }}
      spacesName: ${{ secrets.spaces_name_test }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: sudo pm2 stop ecosystem.config.js
      - run: yarn
      - run: yarn test
  start-app:
    needs: build-run-tests
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: yarn
      - name: remove env file
        run: rm -rf .env*
      - name: creating env file
        run: |
          touch .env
          echo username=${{ secrets.db_username }} >> .env
          password=${{ secrets.db_password }} >> .env
          database="nftng_test" >> .env
          host=${{ secrets.db_host_test }} >> .env
          dialect=mysql
          port=${{ secrets.db_port_test }} >> .env
          accessKey=${{ secrets.spaces_access_key_test }} >> .env
          secretKey=${{ secrets.spaces_secret_key_test }} >> .env
          endPoint=${{ secrets.spaces_end_point_test }} >> .env
          spacesName=${{ secrets.spaces_name_test }} >> .env
      - run: sudo pm2 start ecosystem.config.js
